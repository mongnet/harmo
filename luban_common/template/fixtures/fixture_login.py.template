# -*- coding: utf-8 -*-
# @Time : 2022-12-4 16:38
# @Author : hubiao
# @Email : 250021520@qq.com
# @File : fixture_login.py

import pytest
from luban_common import base_requests
from business import public_login
from luban_common.global_map import Global_Map

@pytest.fixture(scope='session')
def bimadmin_login(env_conf):
    '''
    BIM Aadmin运维管理系统登录
    :return:
    '''
    BimAdminLogin = public_login.BimAdmin(env_conf).login()
    yield BimAdminLogin

@pytest.fixture(scope='session')
def iworks_app_cas(env_conf):
    '''
    获取PDS登录凭证
    :return:
    '''
    public_login.IworksApp(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'), env_conf).login()
    yield

@pytest.fixture(scope='session')
def lbbv(iworks_app_cas, env_conf):
    '''
    获取LBBV登录凭证
    :return:
    '''
    LBBV = base_requests.Send(Global_Map.get('LBBV'), env_conf)
    yield LBBV

@pytest.fixture(scope='session')
def bimco(iworks_app_cas, env_conf):
    '''
    获取BimCO登录凭证
    :return:
    '''
    BimCO = base_requests.Send(Global_Map.get('bimco'), env_conf)
    yield BimCO

@pytest.fixture(scope='session')
def process(iworks_app_cas, env_conf):
    '''
    获取Process登录凭证
    :return:
    '''
    Process = base_requests.Send(Global_Map.get('LBprocess'), env_conf)
    yield Process

@pytest.fixture(scope='session')
def pds_common(iworks_app_cas, env_conf):
    '''
    获取PDSCommon登录凭证
    :return:
    '''
    PDSCommon = base_requests.Send(Global_Map.get('pdscommon'), env_conf)
    yield PDSCommon

@pytest.fixture(scope='session')
def pds_doc(iworks_app_cas, env_conf):
    '''
    获取pdsdoc登录凭证
    :return:
    '''
    PDSDoc = base_requests.Send(Global_Map.get('pdsdoc'), env_conf)
    yield PDSDoc

@pytest.fixture(scope='session')
def builder_common_business_data(iworks_app_cas, env_conf):
    '''
    获取BusinessData登录凭证
    :return:
    '''
    builderCommonBusinessData = base_requests.Send(Global_Map.get('BuilderCommonBusinessdata'), env_conf)
    yield builderCommonBusinessData

@pytest.fixture(scope='session')
def bimapp_login(env_conf):
    '''
    BIMApp 通行证系统登录
    :return:
    '''
    BimAppLogin = public_login.Bimapp(env_conf.get('bimapp').get('username'), env_conf['bimapp']['password'], env_conf).login()
    yield BimAppLogin

@pytest.fixture(scope='session')
def bussiness_login(env_conf):
    '''
    Bussiness 业务管理系统登录
    :return:
    '''
    BussinessLogin = public_login.Bussiness(env_conf.get('Bussiness').get('username'), env_conf.get('Bussiness').get('password'), env_conf).login()
    yield BussinessLogin


@pytest.fixture(scope='session')
def lubansoft_login(env_conf):
    '''
    算量软件登录
    :return:
    '''
    LubansoftLogin = public_login.LubanSoft(env_conf.get('lubansoft').get('username'), env_conf.get('lubansoft').get('password'), env_conf).login()
    yield LubansoftLogin


@pytest.fixture(scope='session')
def token(env_conf):
    '''
    数据管理平台获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('iworksWeb'),env_conf['productId']['iworksWeb'])
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def CenterToken(env_conf):
    '''
    Center获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('center').get('username'), env_conf.get('center').get('password'),env_conf.get('productId').get('center'))
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def appToken(env_conf):
    '''
    appToken获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('iworksApp'),env_conf['productId']['iworksApp'])
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def openapi_motor_token(token, env_conf):
    '''
    获取openapi_motor_token
    :return:
    '''
    resule = public_login.OpenApiMotorToken(token).login()
    yield  resule

@pytest.fixture(scope='session')
def inspectionToken(env_conf):
    '''
    web质检获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('inspection'),env_conf.get('productId').get('inspection'))
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def archivesToken(env_conf):
    '''
    web档案获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('archives'),env_conf.get('productId').get('archives'))
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def pcim(env_conf):
    '''
    PC质检计量
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('im'),env_conf.get('productId').get('im'))
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def meterToken(env_conf):
    '''
    web计量获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('meter'),env_conf.get('productId').get('meter'))
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def occToken(env_conf):
    '''
    指挥中心获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('LubanGO'),env_conf.get('productId').get('LubanGO'))
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def iworksfToken(env_conf):
    '''
    iworks 房建获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('iworksf'),env_conf['productId']['iworksf'])
    yield  resule.login()
    resule.logout()


@pytest.fixture(scope='session')
def iworksjToken(env_conf):
    '''
    iworks 基建获取登录凭证
    :return:
    '''
    resule = public_login.Token(env_conf.get('iworksApp').get('username'), env_conf.get('iworksApp').get('password'),env_conf.get('productId').get('iworksj'),env_conf['productId']['iworksj'])
    yield  resule.login()
    resule.logout()

@pytest.fixture(scope='session')
def OpenAPIToken(env_conf):
    '''
    登录获取token
    '''
    OpenAPIToken = public_login.OpenAPI(env_conf.get("openapi").get("apikey"), env_conf.get("openapi").get("apisecret"), env_conf).login()
    yield OpenAPIToken

@pytest.fixture(scope='session')
def openapi_motor_token_V1(token, env_conf):
    '''
    获取openapi_motor_token motot 1.0
    :return:
    '''
    resule = public_login.OpenApiMotorToken(token).login()
    yield  resule

@pytest.fixture(scope='session')
def openapi_motor_token_V2(token, env_conf):
    '''
    获取openapi_motor_token motot 2.0
    :return:
    '''
    resule = public_login.OpenApiMotorToken_V2(token).login()
    yield  resule
