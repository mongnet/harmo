# yaml的列表语法为 "- key"，横杆和key之间必须要有空格
# 注意冒号后要有空格，这是yaml的语法
# 如果要引用变量或代码，可通过 $变量$ 的方式

# 黑名单，出现在这里的值，不会做为方法的参数；黑名单只支持列表，一行一个
blacklist:
 - lubanremarks # 这是一个例子

# 方法里面需要设置默认参数时的配置，key就是参数名称，后面的value就是默认值
# 只支持key: value 的形式
defaultParame:
 currentPage: 1 # 当前页
 page: 1 # 也是当前页，设计未统一导致的问题
 pageNum: 1 # 也是当前页，设计未统一导致的问题
 pageIndex: 1 # 也是当前页，设计未统一导致的问题
 page_index: 1 # 也是当前页，设计未统一导致的问题
 pageSize: 50 # 分页大小
 page_size: 50 # 分页大小
 size: 10 # 分页大小
 remarks: 自动化测试备注 # 备注
 direction: 0 # 排序方式 0 ASC  1 DESC
 status: 0 # 状态默认为0
 deptType: 0 # 项目类型(0 默认、1 高速公路、2 一级公路 3 二级公路 4 三级公路 5 四级公路 6 市政公路)
 nodeType: 1 # 1标段，2单项，3单位工程
 classification: 0 # 类别 0 施工 1监理 2 检测
 isAll: True # 是否全部授权
 approvalType: 0 # 审批类型: 0-我的待办, 1-我的待发, 2-我的已办
 parentNodeId: "" # 父节点，如果父节点为项目部传空字符串
 prevNodeId: -1 # 排序时的上一个节点id, 没有则传-1

# 替换脚本文件内容，应用到 body 请求体中，比如有些排序参数，没有指定参数时需要有默认处理方式，用替换方式简单、快速、直接
matchs:
 -
  name: "排序"
  match: "'property': property}]"
  replace: "'property': property}] if property is not None else []"
 -
  name: "文件列表"
  match: "'fileMd5': fileMd5, 'fileSize': fileSize}]"
  replace: "'fileMd5': fileMd5, 'fileSize': fileSize}] if fileMd5 is not None else []"
 -
  name: "文件列表"
  match: "'uuid': uuid}]"
  replace: "'uuid': uuid}] if uuid is not None else []"
 -
  name: "文件列表"
  match: "'fileSize': fileSize, 'fileMd5': fileMd5, 'id': id}]"
  replace: "'fileSize': fileSize, 'fileMd5': fileMd5, 'id': id}] if fileUuid is not None else []"
 -
  name: "缩略图文件列表"
  match: "'thumbnailUuid': thumbnailUuid}]"
  replace: "'thumbnailUuid': thumbnailUuid}] if uuid is not None else []"
 -
  name: "岗位列表"
  match: "[{'orgId': orgId, 'phone': phone, 'postId': postId}]"
  replace: "[{'orgId': orgId, 'phone': phone, 'postId': postId}] if uuid is not None else []"
 -
  name: "表单元素保存数据"
  match: "[{'jsonVaule': jsonVaule, 'type': type}]"
  replace: "[{'jsonVaule': jsonVaule, 'type': type}] if type is not None else []"
 -
  name: "指定用户列表"
  match: "[{'approvalNodeId': approvalNodeId, 'approvalUsers': approvalUsers}]"
  replace: "[{'approvalNodeId': approvalNodeId, 'approvalUsers': approvalUsers}] if approvalUsers is not None else []"
 -
  name: "质检表单"
  match: "[{'inspectionCode': inspectionCode, 'inspectionId': inspectionId, 'inspectionName': inspectionName}]"
  replace: "[{'inspectionCode': inspectionCode, 'inspectionId': inspectionId, 'inspectionName': inspectionName}] if inspectionId is not None else []"
 -
  name: "参建单位"
  match: "'contactName': contactName, 'contactPhone': contactPhone}]"
  replace: "'contactName': contactName, 'contactPhone': contactPhone}] if supplierId is not None else []"
 -
  name: "流程节点过期规则"
  match: "'entityType': entityType, 'entityTypeId': entityTypeId, 'tag': tag}]"
  replace: "'entityType': entityType, 'entityTypeId': entityTypeId, 'tag': tag}] if supplierId is not None else []"
 -
  name: "流程节点属性"
  match: "'assigneeEntityType': assigneeEntityType, 'assigneeEntityTypeId': assigneeEntityTypeId}]"
  replace: "'assigneeEntityType': assigneeEntityType, 'assigneeEntityTypeId': assigneeEntityTypeId}] if supplierId is not None else []"
 -
  name: "参建单位"
  match: "'key': key, 'value': value, 'fullData': fullData}]"
  replace: "'key': key, 'value': value, 'fullData': fullData}] if supplierId is not None else []"