#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @TIME    : {{generated_time}}
# @Author  : system
# @File    : test_{{file_name}}.py

import pytest
import allure
from luban_common.base_assert import Assertions
from utils import utils
from swagger.{{project_directory}}.{{file_name}} import {{class_name}}

@allure.feature("{{name}}")
class Test_{{class_name}}:
    """
    {{name}}
    """

    {{# interfaces}}
    @allure.title("{{name_cn}}")
    def test_{{name_en}}(self, {{token}}):
        """
        {{name_cn}}
        """
        {{# body_binary}}
        string_binary = utils.file_absolute_path("data/WBS.xlsx")
        {{/ body_binary}}
        {{# isbody}}
            {{# body}}
        body = {{{body_field_type}}}
            {{/ body}}
        response = {{class_name}}().{{name_en}}({{token}}{{# body_binary}}, {{{.}}}{{/ body_binary}}{{# params_args_nobody}}, {{{.}}}{{/ params_args_nobody}}{{# params_kwargs_nobody}}, {{{.}}}{{/ params_kwargs_nobody}}{{# isbody}}{{# body}}, bodyKwargs=body{{/ body}}{{/ isbody}})
        {{/ isbody}}
        {{^ isbody}}
        response = {{class_name}}().{{name_en}}({{token}}{{# params_args}}, {{{.}}}{{/ params_args}}{{# params_kwargs}}, {{{.}}}{{/ params_kwargs}})
        {{/ isbody}}
        Assertions.assert_code(response,response.get("status_code"),200)
        {{# validate}}
            {{# eq}}
                {{#code}}
        Assertions.assert_code(response, response.get("code")[0],{{code}})
                {{/code}}
                {{#msg}}
        Assertions.assert_equal_value(response.get("msg")[0],"{{msg}}")
                {{/msg}}
            {{/ eq}}
        {{/ validate}}

    {{/ interfaces}}